// <auto-generated />
using System;
using ETicaret.DataAccess.Concrete;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ETicaret.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("E_Ticaret.Abstract.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("Varchar(10)");

                    b.Property<string>("KullaniciSifre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<string>("KullaniciYetki")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("Char(1)");

                    b.HasKey("Id");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Cari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CariAd")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<string>("CariMail")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("Varchar(50)");

                    b.Property<string>("CariSehir")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("Varchar(16)");

                    b.Property<string>("CariSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<int>("satisHareketleriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("satisHareketleriId");

                    b.ToTable("caris");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Departman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DepartmanAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("departmans");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Fatura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FaturaSeriNo")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("Varchar(12)");

                    b.Property<string>("FaturaSıraNo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("Char(1)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("TeslimAlan")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<string>("TeslimEden")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<string>("VergiDairesi")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("Varchar(60)");

                    b.Property<DateTime>("saat")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("faturas");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.FaturaKalem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<decimal>("BirimFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FaturaId")
                        .HasColumnType("int");

                    b.Property<int>("Miktar")
                        .HasColumnType("int");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FaturaId");

                    b.ToTable("faturaKalems");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.GiderSiniflari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("Varchar(100)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Tutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("giderSiniflaris");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Katagori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("KatagoriAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.HasKey("Id");

                    b.ToTable("katagoris");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<string>("PersonelAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<string>("PersonelGorsel")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("PersonelSoyad")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<int>("satisHareketleriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId");

                    b.HasIndex("satisHareketleriId");

                    b.ToTable("personels");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.SatisHareketleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Adet")
                        .HasColumnType("int");

                    b.Property<decimal>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ToplamTutar")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("satisHareketleris");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("AlisFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Durum")
                        .HasColumnType("bit");

                    b.Property<int>("KatagoriId")
                        .HasColumnType("int");

                    b.Property<decimal>("SatisFiyati")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Stok")
                        .HasColumnType("smallint");

                    b.Property<string>("UrunAdi")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<string>("UrunGorsel")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("Varchar(250)");

                    b.Property<string>("UrunMarka")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("Varchar(30)");

                    b.Property<int>("satisHareketleriId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KatagoriId");

                    b.HasIndex("satisHareketleriId");

                    b.ToTable("uruns");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Cari", b =>
                {
                    b.HasOne("E_Ticaret.Abstract.SatisHareketleri", "satisHareketleri")
                        .WithMany("caris")
                        .HasForeignKey("satisHareketleriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("satisHareketleri");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.FaturaKalem", b =>
                {
                    b.HasOne("E_Ticaret.Abstract.Fatura", "Fatura")
                        .WithMany("faturaKalems")
                        .HasForeignKey("FaturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fatura");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Personel", b =>
                {
                    b.HasOne("E_Ticaret.Abstract.Departman", "Departman")
                        .WithMany("personels")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Abstract.SatisHareketleri", "satisHareketleri")
                        .WithMany("personels")
                        .HasForeignKey("satisHareketleriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departman");

                    b.Navigation("satisHareketleri");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Urun", b =>
                {
                    b.HasOne("E_Ticaret.Abstract.Katagori", "Katagori")
                        .WithMany("uruns")
                        .HasForeignKey("KatagoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("E_Ticaret.Abstract.SatisHareketleri", "satisHareketleri")
                        .WithMany("uruns")
                        .HasForeignKey("satisHareketleriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Katagori");

                    b.Navigation("satisHareketleri");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Departman", b =>
                {
                    b.Navigation("personels");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Fatura", b =>
                {
                    b.Navigation("faturaKalems");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.Katagori", b =>
                {
                    b.Navigation("uruns");
                });

            modelBuilder.Entity("E_Ticaret.Abstract.SatisHareketleri", b =>
                {
                    b.Navigation("caris");

                    b.Navigation("personels");

                    b.Navigation("uruns");
                });
#pragma warning restore 612, 618
        }
    }
}
